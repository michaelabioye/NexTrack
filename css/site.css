/* sticky footer css*/
html,
body {
    height: 100%;
}

body {
    display: flex;
    flex-direction: column;
}

main {
    flex-grow: 1;
}

/* END sticky footer CSS */

nav,
footer {
    background-color: var(--ma-theme-900);
    color: var(--ma-theme-100)
}

footer .bi {
    color: var(--ma-theme-200);
    font-size: 1.5rem;
    padding-inline-start: .25rem;
    transition: color .25s
}

footer .bi:hover {
    color: var(--ma-theme-400);
}

.nav-link:hover {
    color: var(--ma-theme-300);

}

.checklist {
    list-style-type: none;
}

.checklist .bi {
    color: var(--ma-theme-core);
}

.devicon {
    font-size: 3.3rem;

}

.btn-primary {
    --bs-btn-bg: var(--ma-theme-600);
    --bs-btn-border-color: var(--ma-theme-600);
    --bs-btn-hover-bg: var(--ma-theme-700);
    --bs-btn-hover-border: var(--ma-theme-700);
    --bs-btn-active-bg: var(--ma-theme-800);
    --bs-btn-active-border: var(--ma-theme-800);
}

.app-logo {
    max-width: 400px;
}

th,
td {
    text-wrap: nowrap;
}

/* This is for my JavaSCript ---Local Storage Notes
this means that it will only be stored in the specific browser
that you saved the info in. its also only stored on that URL.
-local storage is INsecure storage
-local storage is Not Permanent
-local storage is key value pairs of only strings its like objects
but not objects key=time value=3:50pm*/


/*<template id"event-row-template"=>
<tr>
    <td class="evt-name"></td>
    <td class="evt-city"></td>
    <td class="evt-state"></td>
    <td class="evt-date"></td>
    <td class="evt-attendance text-end"></td>
</tr>
</template >*/

/* given an array of event objects, create a new array
of just the city names for each event.

//let cities = currentEvents.map(event => event.city); is another code you can write
// for a for loop that shows map as a function

getting things out of the array will take a for loop to get the answer
if you see for or each and its being specific or when you get insied of.
to access any data you need a for loop*/
/*html is like an array*/
/*//events[i] is a part of the for loop that will take out 
// one thing out of the array of "objects" in this case
// first you have your loop that will target whatever you want
// and under the loop */